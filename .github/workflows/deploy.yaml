name: Deploy to GitHub Pages

on:
  push:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          # Sin cach√© para evitar conflictos

      # Configurar npm para mayor tolerancia a errores
      - name: Configure npm
        run: |
          npm config set fetch-retries 3
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          npm config set maxsockets 1

      - name: Clear npm cache
        run: npm cache clean --force

      # Limpieza completa: package-lock.json + node_modules
      - name: Complete clean install
        run: |
          echo "üóëÔ∏è Removing package-lock.json and node_modules..."
          rm -f package-lock.json
          rm -rf node_modules
          echo "üßπ Cleaning npm cache..."
          npm cache clean --force
          echo "üì¶ Fresh install of all dependencies..."
          npm install --prefer-offline --no-audit
          echo "‚úÖ Complete clean installation finished"

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
